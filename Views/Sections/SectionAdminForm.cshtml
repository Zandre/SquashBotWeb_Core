@using Microsoft.AspNetCore.Razor.Language.Intermediate
@using SquashBotWebCore.Models.SquashBot.Classes.Enums
@model SquashBotWebCore.Models.TournamentAdminViewModels.SectionVm

@{
    ViewData["Title"] = "SaveTeam";
}

<h4>@Model.Tournament.Name</h4>
<h2>@(Model.IsNew ? "Create " + Model.Tournament.SectionType :
          Model.Name + " " + Model.Tournament.SectionType)</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SaveSection">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SectionId" />
            <input type="hidden" asp-for="TournamentId" />
            <div class="form-group">
                <label class="control-label">@Model.Tournament.SectionType Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlayersPerTeam" class="control-label"></label>
                <input asp-for="PlayersPerTeam" class="form-control" />
                <span asp-validation-for="PlayersPerTeam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Par" class="control-label"></label>
                <input asp-for="Par" class="form-control" />
                <span asp-validation-for="Par" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                @Html.DropDownList("Gender", Html.GetEnumSelectList<SectionGender>(), "", new {@class = "form-control"})
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group row">
                @Html.ActionLink("Back", "Edit", "Tournaments", new { id = Model.TournamentId }, new { @class = "btn btn-primary" })
                <input type="submit" value="@(Model.IsNew ? "SaveSquashVenue " + Model.Tournament.SectionType : "Save " + Model.Tournament.SectionType)" class="btn btn-success" />
                @if (!Model.IsNew)
                {@Html.ActionLink("Delete " + Model.Tournament.SectionType, "Delete", new { id = Model.SectionId }, new { @class = "btn btn-danger" })}
            </div>
            <div class="form-group row">
                @if (!Model.IsNew)
                {
                    @Html.ActionLink("Fixtures", "Index", "Fixtures", new { sectionId = Model.SectionId }, new { @class = "btn btn-info" })
                }
            </div>
        </form>
    </div>
</div>

<div class="row">
    @if (!Model.IsNew)
    {
        <h2>Teams</h2>
        <div>
            <table id="teamGrid" class="table table-striped table-bordered dt-responsive nowrap">
                <thead>
                <tr>
                    <th>Team Name</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var team in Model.Teams)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(team.Name, "Edit", "Teams", new { id = team.TeamId }, null)
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <div>
                @Html.ActionLink("Add New Team", "SaveTeam", "Teams", new { sectionId = Model.SectionId }, new { @class = "btn btn-success" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
                 
<script>
    $('#teamGrid').dataTable({
    });
</script>
